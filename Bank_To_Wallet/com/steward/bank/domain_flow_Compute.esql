/*
Application Name : Bank To Wallet. 
Description :
1) In this Compute the data from the router can be in JSON or DFDL.
2) Here we have transformed the JSON format to DFDL which is going to hit the POSTILION.
3) The DFDL will directly hit the T24.
4) The LOG4J and DB Logging has been done here.
Date : 10-03-2020.
Modified Date : 13-03-2020.
Author : G Raghavender.	 
===================================================================================================================   */ 
BROKER SCHEMA com.steward.bank     

PATH com.steward.log4j,CommonBitMapGen;      
CREATE COMPUTE MODULE domain_flow_Compute
	DECLARE rc BOOLEAN;
	DECLARE Config_File EXTERNAL CHARACTER '';
	DECLARE IsLogRequired EXTERNAL CHARACTER '';     
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		CALL initLog (Config_File) INTO rc;   
		CALL CopyEntireMessage();

		RETURN FALSE;
	END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN

		SET Environment.msgID = InputRoot.MQMD.MsgId;
		DECLARE domainFldName CHARACTER FIELDNAME(InputBody);
		SET Environment.Domain = FIELDNAME(InputBody);
		DECLARE req CHARACTER '';

		IF IsLogRequired LIKE 'Y' THEN
			CALL writerToLogFile (MessageFlowLabel,'Log','INFO','=================== Request Received From Router ================') INTO rc;
			SET req = CAST(ASBITSTREAM(InputRoot.DFDL CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
			CALL writerToLogFile (MessageFlowLabel,'Log','INFO',req) INTO rc;
			CALL writerToLogFile (MessageFlowLabel,'Log','INFO','=================== Request Sent to POSTILION ================') INTO rc;
		END IF; 

		CASE
		WHEN domainFldName ='DFDL' THEN

			DECLARE msgId CHARACTER CAST(InputRoot.MQMD.MsgId AS CHARACTER);  
			DECLARE serverIp,brokerName,egName,payload CHARACTER'';
			DECLARE msgTime TIMESTAMP CURRENT_TIMESTAMP;
			SET req = CAST(ASBITSTREAM(InputRoot.DFDL CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
			SET OutputRoot.JSON.Data.DB_LOGGING.msgId = msgId;
			SET OutputRoot.JSON.Data.DB_LOGGING.serverIp='192.168.2.15';
			SET OutputRoot.JSON.Data.DB_LOGGING.brokerName ='ESB';
			SET OutputRoot.JSON.Data.DB_LOGGING.egName ='IT';
			SET OutputRoot.JSON.Data.DB_LOGGING.createdBy ='ESB';
			SET OutputRoot.JSON.Data.DB_LOGGING.msgTime = msgTime; 
			SET OutputRoot.JSON.Data.DB_LOGGING.payload = req;
			SET OutputRoot.JSON.Data.DB_LOGGING.payloadTime=msgTime;
			SET OutputRoot.JSON.Data.DB_LOGGING.payloadTP =req;
			SET OutputRoot.JSON.Data.DB_LOGGING.payloadTPTime =msgTime;

			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'DB_AUDIT';
			PROPAGATE TO TERMINAL 'out2';

			SET OutputRoot =InputRoot;
			propagate TO TERMINAL 'out';			
			


		WHEN domainFldName ='JSON' THEN

			DECLARE msgId CHARACTER CAST(InputRoot.MQMD.MsgId AS CHARACTER);  
			DECLARE serverIp,brokerName,egName,payload CHARACTER'';
			DECLARE msgTime TIMESTAMP CURRENT_TIMESTAMP;
			SET req = CAST(ASBITSTREAM(InputRoot.DFDL CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
			SET OutputRoot.JSON.Data.DB_LOGGING.msgId = msgId;
			SET OutputRoot.JSON.Data.DB_LOGGING.serverIp='192.168.2.15';
			SET OutputRoot.JSON.Data.DB_LOGGING.brokerName ='ESB';
			SET OutputRoot.JSON.Data.DB_LOGGING.egName ='IT';
			SET OutputRoot.JSON.Data.DB_LOGGING.createdBy ='ESB';
			SET OutputRoot.JSON.Data.DB_LOGGING.msgTime = msgTime;
			SET OutputRoot.JSON.Data.DB_LOGGING.payload = req;
			SET OutputRoot.JSON.Data.DB_LOGGING.payloadTime=msgTime;
			SET OutputRoot.JSON.Data.DB_LOGGING.payloadTP =req;
			SET OutputRoot.JSON.Data.DB_LOGGING.payloadTPTime =msgTime;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'DB_AUDIT';
			PROPAGATE TO TERMINAL 'out3';                 


			SET Environment.MSG.Properties = InputRoot.Properties;
			SET Environment.MSG.MQMD = InputRoot.MQMD;

			DECLARE outPayLoadRef REFERENCE TO OutputRoot.DFDL.ISO8583_1987;
			DECLARE inPayLoadRef REFERENCE TO InputRoot.JSON.Data.ISO8583_1987;
			-- Assigning MessageType Properties with Required ISO message
			SET OutputRoot.Properties.MessageType = '{}:ISO8583_1987';
			-- Creating Domain and ISO type
			CREATE LASTCHILD OF OutputRoot AS outPayLoadRef DOMAIN 'DFDL';
			CREATE LASTCHILD OF outPayLoadRef AS outPayLoadRef NAME 'ISO8583_1987';
			-- Adding MTI header
			SET outPayLoadRef.MTI_Version = inPayLoadRef.MTI_Version;
			SET outPayLoadRef.MTI_MessageClass = inPayLoadRef.MTI_MessageClass;
			SET outPayLoadRef.MTI_MessageFunction = inPayLoadRef.MTI_MessageFunction;
			SET outPayLoadRef.MTI_MessageOrigin = inPayLoadRef.MTI_MessageFunction;
			-- method for initialising Field list
			CALL GenNPCIReqMsgWithXML();
			--CALL updateMsgWithHexBitMap(outPayLoadRef);
			CALL updateMsgWithAsciiBitMap(outPayLoadRef);		

                 
			-- propagate TO TERMINAL 'out2' DELETE NONE;
			propagate TO TERMINAL 'out1';
		END CASE;
	END;
	CREATE PROCEDURE GenNPCIReqMsgWithXML ()
	BEGIN
		DECLARE outISOMsgRef REFERENCE TO OutputRoot.DFDL.ISO8583_1987;
		DECLARE inBodyRef REFERENCE TO InputRoot.JSON.Data.ISO8583_1987;
		/*SET outISOMsgRef.ProcessingCode_003= '950000';
		SET outISOMsgRef.ReservedPrivate_062='12345678050';
		SET outISOMsgRef.AccountIdentification1_102 = '123456789101112';
		*/
		--SET outISOMsgRef.PrimaryAccountNumber_002= inBodyRef.PrimaryAccountNumber_002;  
		SET outISOMsgRef.ProcessingCode_003= inBodyRef.ProcessingCode_003;  
		SET outISOMsgRef.AmountTransaction_004=inBodyRef.AmountTransaction_004;
		SET outISOMsgRef.TransmissionDatetime_007=CAST(inBodyRef.TransmissionDatetime_007 AS TIMESTAMP FORMAT 'MMddHHmmss');
		SET outISOMsgRef.SystemsTraceAuditNumber_011=inBodyRef.SystemsTraceAuditNumber_011;
		SET outISOMsgRef.TimeLocalTransaction_012=inBodyRef.TimeLocalTransaction_012;
		SET outISOMsgRef.DateLocalTransaction_013=CAST(inBodyRef.DateLocalTransaction_013 AS DATE FORMAT 'MMdd');
		SET outISOMsgRef.DateSettlement_015=CAST(inBodyRef.DateSettlement_015 AS DATE FORMAT 'MMdd');
		SET outISOMsgRef.MerchantType_018=inBodyRef.MerchantType_018;
		SET outISOMsgRef.PointOfServiceEntryMode_022=inBodyRef.PointOfServiceEntryMode_022;
		SET outISOMsgRef.PointOfServiceConditionCode_025=inBodyRef.PointOfServiceConditionCode_025;
		SET outISOMsgRef.AmountTransactionFee_028=inBodyRef.AmountTransactionFee_028;
		SET outISOMsgRef.AmountTransactionProcessingFee_030=inBodyRef.AmountTransactionProcessingFee_030;
		SET outISOMsgRef.AcquiringInstitutionIdentificationCode_032=inBodyRef.AcquiringInstitutionIdentificationCode_032;
		SET outISOMsgRef.ForwardingInstitutionIdentificationCode_033=inBodyRef.ForwardingInstitutionIdentificationCode_033;
		SET outISOMsgRef.RetrievalReferenceNumber_037=inBodyRef.RetrievalReferenceNumber_037;
		SET outISOMsgRef.CardAcceptorTerminalIdentification_041=inBodyRef.CardAcceptorTerminalIdentification_041;
		SET outISOMsgRef.CardAcceptorIdentificationCode_042=inBodyRef.CardAcceptorIdentificationCode_042;
		SET outISOMsgRef.CardAcceptorNameLocation_043=inBodyRef.CardAcceptorNameLocation_043;		
		SET outISOMsgRef.CurrencyCodeTransaction_049=inBodyRef.CurrencyCodeTransaction_049;		
		SET outISOMsgRef.ReservedISO_056=inBodyRef.ReservedISO_056;
		SET outISOMsgRef.ReservedNational_059=inBodyRef.ReservedNational_059;		
		SET outISOMsgRef.ReceivingInstitutionIdentificationCode_100=inBodyRef.ReceivingInstitutionIdentificationCode_100;
		SET outISOMsgRef.AccountIdentification1_102=inBodyRef.AccountIdentification1_102;
		SET outISOMsgRef.AccountIdentification2_103=inBodyRef.AccountIdentification2_103;  		
		SET outISOMsgRef.ReservedPrivate_123=inBodyRef.ReservedPrivate_123;		
	END;

END MODULE;  
                 
