

BROKER SCHEMA com.steward.bank


CREATE COMPUTE MODULE construct_ErrorRes
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();

		CALL ConstructError_Res();
		--IF excpRef.excpType = ''

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE ConstructError_Res() BEGIN
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'BalanceEnquiry';
		DECLARE outRef REFERENCE TO OutputRoot.XMLNSC.*;
		SET outRef.excpType = FIELDNAME(excpRef);
		SET outRef.excpNumber = excpRef.Number;
		SET outRef.excpLable = excpRef.Label;
		SET outRef.excpText = excpRef.Text;
		IF excpRef.excpType = 'FatalException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_001';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Fatal exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'RecoverableException' THEN

			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_002';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Recoverable Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'ConfigurationException' THEN

			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_003';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Configuration Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'SecurityException' THEN

			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_004';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Security Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'ParserException' THEN

			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_005';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Parser Exceptionat'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'ConversionException' THEN

			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_006';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Conversion Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'DatabaseException' THEN

			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_007';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Database Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'UserException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_008';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'User Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'CastException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_009';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Cast Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'MessageException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_010';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Message Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'SqlException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_011';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Sql Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'SocketException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_012';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Socket Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'SocketTimeoutException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_013';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Socket Timeout Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		ELSEIF excpRef.excpType = 'UnknownException' THEN
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_014';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Unknown Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			

		ELSE
			
			SET outRef.Status = 'FAILURE';
			SET outRef.ErrorCode = 'BALENQ_015';
			SET outRef.ErrorType = excpRef.excpType;
			SET outRef.Description = 'Exception at'||CAST(excpRef.excpLable AS CHARACTER);
			
		END IF;			    
    
    
    
    
    
    
    
    
    
    
    
    
    
			
		
		
	


	END;
END MODULE;