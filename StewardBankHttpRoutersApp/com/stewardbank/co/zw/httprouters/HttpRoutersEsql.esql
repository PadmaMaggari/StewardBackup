BROKER SCHEMA com.stewardbank.co.zw.httprouters
DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER '';
DECLARE IsLogRequired EXTERNAL CHARACTER '';
DECLARE TABLENAME EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE HttpRequestRouterFlow_GenerateReqToBusinessFlow
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL GenerateReqToBusinessFlow();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE GenerateReqToBusinessFlow() BEGIN
		--DECLARE inRef REFERENCE TO InputRoot.JSON.Data.receive.isomsg;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE inRef REFERENCE TO InputRoot.XMLNSC.log.receive.isomsg;
		DECLARE procCode CHARACTER COALESCE(SUBSTRING(InputRoot.JSON.Data.receive.isomsg.field.Item[2].value FROM 1 FOR 2),SUBSTRING(FIELDVALUE(inRef.field[2]) FROM 1 FOR 2),'');
		DECLARE query CHARACTER;
		IF domainName = 'JSON' OR domainName = 'XMLNSC' THEN
		SET query = 'select REQ_QUEUE_NAME,RESQ_QUEUE_NAME from '||TABLENAME||' where proc_code = '''||procCode||''' and domain = '''||domainName||'''';
		SET Environment.Data[] = PASSTHRU(query);	
		END IF;
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = Environment.Data.REQ_QUEUE_NAME;
	END;
END MODULE;


CREATE COMPUTE MODULE HttpResponseRouterFlow_GenerateResToFrontEnd
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL GenerateResToFrontEnd();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE GenerateResToFrontEnd() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE HttpRequestRouterFlow_BuildExceptionRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL BuildExceptionRequest();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE BuildExceptionRequest() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;




CREATE COMPUTE MODULE HttpResponseRouterFlow_BuildExceptionResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL BuildExceptionResponse();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE BuildExceptionResponse() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
