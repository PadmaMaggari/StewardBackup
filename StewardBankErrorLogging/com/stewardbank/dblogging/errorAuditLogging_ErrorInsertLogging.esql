BROKER SCHEMA com.stewardbank.dblogging

PATH com.stewardbank.co.zw.common.esql;    
DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER'';
CREATE DATABASE MODULE errorAuditLogging_ErrorInsertLogging
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		
		DECLARE rc BOOLEAN FALSE;
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		DECLARE loggingData CHARACTER;
		DECLARE ccidRef INTEGER Root.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER Root.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO Root.XMLNSC; 
		SET loggingData = getPayLoad(FIELDNAME(Body),domainDataRef,encodeRef,ccidRef); 
		
		IF ( rc = FALSE ) THEN
			DECLARE msg CHARACTER ;
			SET Environment.Variables.Log4j.ErrorMsg = 'Initializing the log4j path';
		END IF;
		CALL writeToLogFile(MessageFlowLabel, 'errorRawAuditLogging', 'DEBUG','..............ERROR_AUDIT_LOGGING ...........') INTO rc;
		CALL writeToLogFile(MessageFlowLabel, 'errorRawAuditLogging', 'DEBUG',loggingData) INTO rc;
		
		
		DECLARE Inpref REFERENCE TO Root.JSON.Data.DBLogging;
		DECLARE creationDate TIMESTAMP CAST(CURRENT_TIMESTAMP AS TIMESTAMP FORMAT 'IU');
		call insertdb_logging_error(Inpref.MSGID,creationDate,Inpref.MESSAGE,Inpref.MESSAGE_TYPE,Inpref.APPNAME,Inpref.BROKERNAME,Inpref.ERRORDESCRIPTION,Inpref.TIME_LOCAL_TRANSACTION,Inpref.DATE_LOCAL_TRANSACTION,Inpref.RETRIEVAL_REFERENCE_NUMBER,Inpref.BORKER_ERROR_CODE,Inpref.USER_DEFINE_ERROR_CODE);
		RETURN TRUE; 
	END; 

END MODULE;      

CREATE PROCEDURE insertdb_logging_error (IN MSGID CHARACTER,IN LIGGING_TIME TIMESTAMP,IN MESSAGE CHARACTER,IN MESSAGE_TYPE CHARACTER,IN APPNAME CHARACTER,IN BROKERNAME CHARACTER,IN EXCEPTIONdESC CHARACTER,IN TIME_LOCAL_TRANSACTION CHARACTER,IN DATE_LOCAL_TRANSACTION CHARACTER,IN RETRIEVAL_REFERENCE_NUMBER CHARACTER,IN BORKER_ERROR_CODE CHARACTER,IN USER_DEFINE_ERROR_CODE CHARACTER)
LANGUAGE DATABASE
EXTERNAL NAME "INSERT_ERROR_AUDIT_LOGGING";
