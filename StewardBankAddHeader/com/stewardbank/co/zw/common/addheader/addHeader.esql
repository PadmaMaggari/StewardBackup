/*
Author:Rathod Veerender
Version:0.0.1
Date of Creation:06-06-2020
Date of Modification:
Description:Add Header to the ISO 8583 sample		
*/
BROKER SCHEMA com.stewardbank.co.zw.common.addheader
PATH com.stewardbank.co.zw.common.esql;
DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER '';
DECLARE LOG4J_INIT_ERROR_MSG EXTERNAL CHARACTER '';
CREATE COMPUTE MODULE addHeader
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		IF domainName = 'DFDL' THEN
			SET OutputRoot.Properties = InputRoot.Properties;
			SET OutputRoot.HTTPInputHeader = InputRoot.HTTPInputHeader;
			SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;
			DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
			DECLARE ccsidRef INTEGER InputRoot.Properties.CodedCharSetId;
			DECLARE inDomainDataRef REFERENCE TO InputRoot.DFDL;
			DECLARE data BLOB getBlobData(inDomainDataRef,encodeRef,ccsidRef); 
	 		DECLARE tcpHeader BLOB ;
	 		DECLARE rc BOOLEAN FALSE;
			CALL initLog4j(LOG_CONFIG_PATH) INTO rc; 			
			IF ( rc = FALSE ) THEN
				DECLARE msg CHARACTER ;
				SET Environment.Variables.Log4j.ErrorMsg = LOG4J_INIT_ERROR_MSG;		
			END IF;
			CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG','..............Start logging add header sub flow...........') INTO rc;
	 		--JAVA procedure call to get 2 byte header
	 		SET tcpHeader = Get2ByteHeader(data);
	 		CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG','Data with header') INTO rc;
	 		CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG',CAST(tcpHeader AS CHARACTER)) INTO rc;   
	 		DECLARE hexBits CHARACTER SUBSTRING(CAST(tcpHeader AS CHARACTER) FROM 3 FOR 4);
	 		CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG','Hex Data of Header:'||hexBits) INTO rc;
	 		DECLARE dataWithHeader CHARACTER SUBSTRING(CAST(data AS CHARACTER) FROM 1 FOR 2) || hexBits || SUBSTRING(CAST(data AS CHARACTER) FROM 3);
	 		CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG','Data with Header'||dataWithHeader) INTO rc;
	 		SET OutputRoot.Properties.MessageType = '{}:ISO8583WithHeader';
	 		CREATE LASTCHILD OF OutputRoot DOMAIN('DFDL') 
	 		PARSE(CAST(dataWithHeader AS BLOB)  ENCODING encodeRef CCSID ccsidRef SET '{ISO8583_Lib}' TYPE '{}:ISO8583WithHeader');
	 		DECLARE outDomainRef REFERENCE TO OutputRoot.DFDL;
	 		CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG','OutputRoot:') INTO rc;
	 		CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG',getPayLoad(FIELDNAME(OutputRoot.DFDL.ISO8583WithHeader),outDomainRef,encodeRef,ccsidRef)) INTO rc;
			CALL writeToLogFile(MessageFlowLabel, 'AddHeaderLogger', 'DEBUG','..............end logging add header sub flow...........') INTO rc;
		END IF;
 		RETURN TRUE;
	END;
END MODULE;
