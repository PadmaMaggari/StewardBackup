BROKER SCHEMA com.stewardbank.co.zw.dbReprocess
path com.stewardbank.co.zw.common.esql ;
DECLARE dbFailureFolderPath,triggerTime,rtgsIncomingFolderPath  EXTERNAL CHARACTER ''; 
DECLARE LOG_CONFIG_PATH,LOG4J_INIT_ERROR,SB_EXCQ,ERROR_AUDIT_Q,IsLogRequired EXTERNAL CHARACTER '';
CREATE COMPUTE MODULE RtgsIncomingDbReprocess_trigFlowatFive
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL trigFlowatFive();
		RETURN TRUE;
	END;
	CREATE PROCEDURE trigFlowatFive() BEGIN
		DECLARE rc BOOLEAN FALSE;
		DECLARE test TIME CAST(CURRENT_TIME AS TIME FORMAT 'hh:mm:ss');
		DECLARE test2 TIME CAST(triggerTime AS TIME);
		DECLARE today DATE CURRENT_DATE;
		IF (rc = FALSE) THEN
			SET Environment.Variables.Log4j.ErrorMsg = LOG4J_INIT_ERROR;
		END IF;
		IF IsLogRequired LIKE 'Y' THEN
		CALL writeToLogFile(MessageFlowLabel,'RTGSFileReprocess', 'DEBUG','..............Start RTGSIncoming Db Failure Reprocess logging...........') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,'RTGSFileReprocess', 'DEBUG','RTGSIncoming Request Reprocess time is:'||triggerTime) INTO rc;
		END IF;
		IF test<test2 THEN
					
			SET OutputLocalEnvironment.TimeoutRequest.Action = 'SET';
			SET OutputLocalEnvironment.TimeoutRequest.Identifier = 'CtrlRtgs';
			SET OutputLocalEnvironment.TimeoutRequest.StartTime = triggerTime;
			SET OutputLocalEnvironment.TimeoutRequest.IgnoreMissed = 'TRUE';
		ELSE
			DECLARE startday CHARACTER CAST(today+INTERVAL '1' DAY AS CHARACTER FORMAT 'yyyy-MM-dd');
			SET OutputLocalEnvironment.TimeoutRequest.Action = 'SET';
			SET OutputLocalEnvironment.TimeoutRequest.Identifier = 'CtrlRtgs';
			SET OutputLocalEnvironment.TimeoutRequest.StartDate = startday;
			SET OutputLocalEnvironment.TimeoutRequest.StartTime = triggerTime;
			SET OutputLocalEnvironment.TimeoutRequest.IgnoreMissed = 'TRUE';
		END IF;
	END;
END MODULE;

CREATE COMPUTE MODULE RtgsIncomingDbReprocess_PickFilesfrmDbFailure
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL pickFilesFrmDBFolder();
		RETURN FALSE;
	END;
	CREATE PROCEDURE pickFilesFrmDBFolder() BEGIN
		DECLARE rc BOOLEAN FALSE;
		DECLARE hr INTEGER;
		DECLARE dateFolder CHARACTER ; 
		SET dateFolder = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMdd'); 
		--SET hr = EXTRACT(HOUR FROM CURRENT_TIMESTAMP);
		IF (rc = FALSE) THEN
			SET Environment.Variables.Log4j.ErrorMsg = LOG4J_INIT_ERROR;
		END IF;
		IF IsLogRequired LIKE 'Y' THEN
		CALL writeToLogFile(MessageFlowLabel,'RTGSFileReprocess', 'DEBUG','..............Start picking up the files from Dbfailure folder ...........') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,'RTGSFileReprocess', 'DEBUG','RTGSIncoming Reprocess path for DbFailure :'||dbFailureFolderPath||dateFolder) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,'RTGSFileReprocess', 'DEBUG','RTGSIncoming Request Reprocess time is:'||triggerTime) INTO rc;
		END IF;
		WHILE Environment.NoMatchReason IS  NULL DO 
			SET OutputLocalEnvironment.Destination.File.Directory = dbFailureFolderPath||dateFolder;
			PROPAGATE TO TERMINAL 'out';		
		END WHILE;
	END;
END MODULE;
CREATE COMPUTE MODULE RtgsIncomingDbReprocess_PlaceFilesInRtgsIncoming
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL PlaceFilesInRtgsIncoming();
		RETURN FALSE;
	END;
	CREATE PROCEDURE PlaceFilesInRtgsIncoming() BEGIN
		DECLARE rc BOOLEAN FALSE;
	--	DECLARE isEmpty BOOLEAN OutputLocalEnvironment.Destination.File.Read.IsEmpty ;
		DECLARE file CHARACTER InputLocalEnvironment.File.Read.Name ;
		DECLARE noMatch CHARACTER InputLocalEnvironment.File.Read.NoMatchReason ;
		IF (rc = FALSE) THEN
			SET Environment.Variables.Log4j.ErrorMsg = LOG4J_INIT_ERROR;
		END IF;
		IF IsLogRequired LIKE 'Y' THEN
		CALL writeToLogFile(MessageFlowLabel, 'RTGSFileReprocess', 'DEBUG','..............Start placing files to the RtgsIncoming Application...........') INTO rc;
		CALL writeToLogFile(MessageFlowLabel, 'RTGSFileReprocess', 'DEBUG','RTGSIncoming Application path :'||rtgsIncomingFolderPath) INTO rc;
		CALL writeToLogFile(MessageFlowLabel, 'RTGSFileReprocess', 'DEBUG','End of RTGSIncoming Request Reprocess Logging') INTO rc;
		END IF;
		IF noMatch = 'NoFile' THEN
			SET Environment.NoMatchReason = 'NoFile';
		ELSE
			SET OutputLocalEnvironment.Destination.File.Directory = rtgsIncomingFolderPath ;
			SET OutputLocalEnvironment.Destination.File.Name = InputLocalEnvironment.File.Read.Name ;
 			SET OutputRoot.BLOB.BLOB = InputRoot.BLOB.BLOB;
 			PROPAGATE TO TERMINAL 'out';		
		END IF;
		END;
END MODULE;

