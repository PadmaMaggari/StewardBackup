BROKER SCHEMA com.stewardbank.co.zw.soaprouter
PATH com.stewardbank.co.zw.common.esql;



CREATE COMPUTE MODULE SoapOutgoingRouter_RouteBasedOnProtocol
	DECLARE IsLogRequired EXTERNAL CHARACTER '';
DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER '';
DECLARE LOG4J_INIT_ERROR_MSG EXTERNAL CHARACTER '';
DECLARE rc BOOLEAN;
DECLARE RAW_AUDIT_Q EXTERNAL CHARACTER '';
DECLARE ERR_AUDIT_Q EXTERNAL CHARACTER '';
DECLARE EXCEPTION_Q EXTERNAL CHARACTER '';
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;


	CREATE PROCEDURE CopyEntireMessage() BEGIN
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		IF ( rc = FALSE ) THEN
			DECLARE msg CHARACTER ;
			SET Environment.Variables.Log4j.ErrorMsg = LOG4J_INIT_ERROR_MSG;
		END IF;
		CALL writeToLogFile(MessageFlowLabel,'SoapRouterLog','DEBUG','=====================================  OUTGOING  ROUTER =================================') INTO rc ;
		
		DECLARE inRefData REFERENCE TO InputRoot.XMLNSC;
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.XMLNSC;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		SET Environment.Variables.reqMsg = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		DECLARE outRefer REFERENCE TO OutputRoot;
		IF IsLogRequired LIKE 'Y' THEN
			CALL DBLogging(CAST(InputRoot.MQRFH2.usr.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER),Environment.Variables.reqMsg,'Router Response',ApplicationLabel,BrokerName,Environment.MQRFH2.usr.timeLocalTransaction,Environment.MQRFH2.usr.dateLocalTransaction,
			Environment.MQRFH2.usr.retrievalReferenceNumber,outRefer);
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = RAW_AUDIT_Q;
		PROPAGATE TO TERMINAL 'out1';
		END IF;
		
		
		IF IsLogRequired LIKE 'Y' THEN
			CALL writeToLogFile(MessageFlowLabel, 'SoapRouterLog', 'DEBUG','SOAP Router Response::') INTO rc;
			CALL writeToLogFile(MessageFlowLabel, 'SoapRouterLog', 'DEBUG',Environment.Variables.reqMsg) INTO rc;
			CALL writeToLogFile(MessageFlowLabel, 'SoapRouterLog', 'DEBUG','TCPIP ID::'|| CAST(InputRoot.MQRFH2.usr.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER)) INTO rc;
		END IF;
		
		
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = CAST(InputRoot.MQRFH2.usr.Destination.SOAP.Reply.ReplyIdentifier AS BLOB);
		SET OutputLocalEnvironment.SOAP.Envelope = '';
		SET OutputRoot.SOAP.Body = InputRoot.XMLNSC;
	END;
END MODULE;


CREATE COMPUTE MODULE SoapOutgoingRouter_BuildExceptionDetails
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL BuildException();
		RETURN TRUE;
	END;

	CREATE PROCEDURE BuildException() BEGIN
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		IF ( rc = FALSE ) THEN
			DECLARE msg CHARACTER ;
			SET Environment.Variables.Log4j.ErrorMsg = LOG4J_INIT_ERROR_MSG;
		END IF;
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		DECLARE outRefer REFERENCE TO OutputRoot;
		SET Environment.Variables.Id = InputRoot.MQRFH2.usr.Id ;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'OutGoingRouter';
		DECLARE outRef REFERENCE TO OutputRoot.XMLNSC.*;
		CALL BuildExceptionDetails(excpRef,outRef,'OutGoingRouter');
		SET Environment.Variables.OutgoingRouterErrorCodes = OutputRoot.XMLNSC;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = EXCEPTION_Q;
		PROPAGATE TO TERMINAL 'out';
		-- DB Logging===================
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.XMLNSC;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE exe_Desc CHARACTER '';
		SET exe_Desc = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		CALL writeToLogFile(MessageFlowLabel,'ErrorLogger','ERROR','=====================================  OUTGOING ROUTER  EXCEPTIOPN =================================') INTO rc ;
		CALL writeToLogFile(MessageFlowLabel,'ErrorLogger','ERROR','Exception Details: '||exe_Desc) INTO rc ;
		CALL writeToLogFile(MessageFlowLabel,'ErrorLogger','ERROR','TCPIP ID: '||InputRoot.MQRFH2.usr.Id)INTO rc;
		CALL Error_DBLogging(Environment.Id,Environment.Variables.reqMsg,'Router Response Error',ApplicationLabel,BrokerName,exe_Desc,Environment.Variables.systemsTraceAuditNumber,Environment.Variables.dateLocalTransaction,Environment.Variables.retrievalReferenceNumber,CAST(excpRef.excpNumber AS CHARACTER),Environment.OutgoingRouterErrorCodes.OutGoingRouter.ErrorCode,outRefer);
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = ERR_AUDIT_Q ;
		PROPAGATE TO TERMINAL 'out1';
	END;
END MODULE;
