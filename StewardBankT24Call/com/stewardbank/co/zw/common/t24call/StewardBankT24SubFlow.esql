/*
Author:Rathod Veerender
Version:0.0.1
Date of Creation:30-03-2020
Date of Modification:
Description:Capture Exception if t24 is down or unavailable then send to Exception queue first and send response to fornt 
			end(postilion or Zss) with ResponseCode 06 which is nothing but Error as per document shared by stewardbank. 
 			
*/
BROKER SCHEMA com.stewardbank.co.zw.common.t24call

PATH com.stewardbank.co.zw.common.esql;


CREATE COMPUTE MODULE StewardBankT24SubFlow
	DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'EXC_Q';--Environment.Variables.ExceptionQ;
		propagate;
		DECLARE inRef REFERENCE TO Environment.Variables.DFDL.ISO8583_1987;
		CREATE LASTCHILD OF OutputRoot DOMAIN ('DFDL');
		DECLARE outRef REFERENCE TO OutputRoot.DFDL;
		CREATE LASTCHILD OF OutputRoot.DFDL AS outRef NAME 'ISO8583_1987';
		DECLARE rc BOOLEAN FALSE;
		DECLARE mtiRes CHARACTER '';
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;			
		IF ( rc = FALSE ) THEN
			DECLARE msg CHARACTER ;
			SET Environment.Variables.Log4j.ErrorMsg = 'Initializing the log4j path error';		
		END IF;
		--generate a error response in iso8583 to front end system in case of failure of t24
		CALL FieldToFieldMapping(inRef,outRef,'Y');
		
		CALL MTIResponse(CAST(inRef.MTI_Version AS CHARACTER),CAST(inRef.MTI_MessageClass AS CHARACTER),CAST(inRef.MTI_MessageFunction AS CHARACTER),CAST(inRef.MTI_MessageOrigin AS CHARACTER)) into mtiRes;
		SET outRef.MTI_Version=SUBSTRING(mtiRes FROM 1 FOR 1);
		SET outRef.MTI_MessageClass=SUBSTRING(mtiRes FROM 2 FOR 1);
		SET outRef.MTI_MessageFunction=SUBSTRING(mtiRes FROM 3 FOR 1); 
		SET outRef.MTI_MessageOrigin=SUBSTRING(mtiRes FROM 4 FOR 1);
		--SET outRef.PrimaryBitmap.Bit039=1;
		--SET outRef.ResponseCode_039='06';
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = Environment.Variables.ResponseQ;
		CALL writeToLogFile(MessageFlowLabel, 'ErrorRes', 'DEBUG','Response To Postilion::') INTO rc;
		CALL writeToLogFile(MessageFlowLabel, 'ErrorRes', 'DEBUG',CAST(ASBITSTREAM(OutputRoot CCSID Environment.Variables.Properties.CodedCharSetId) AS CHARACTER CCSID Environment.Variables.Properties.CodedCharSetId)) INTO rc;
		propagate;
		RETURN FALSE;
	END;
	

	
END MODULE;
