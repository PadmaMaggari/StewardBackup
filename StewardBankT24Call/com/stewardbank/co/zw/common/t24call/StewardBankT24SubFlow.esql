/*
Author:Rathod Veerender
Version:0.0.1
Date of Creation:14-04-2020
Date of Modification: 20-04-2020
Description: retry for 3 times when tcp connection is down or unavaiable.
 			
*/
BROKER SCHEMA com.stewardbank.co.zw.common.t24call
PATH com.stewardbank.co.zw.common.esql;
DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER '';
DECLARE MAX_RETRY_COUNT EXTERNAL INTEGER 0;
DECLARE INIT_LOG4J_ERROR EXTERNAL CHARACTER '';
DECLARE RETRY_INTERVAL EXTERNAL INTEGER 0;

	
CREATE COMPUTE MODULE StewardBankT24SubFlow
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 DECLARE rc BOOLEAN FALSE;
		 CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		 IF ( rc = FALSE ) THEN
			SET Environment.Variables.Log4j.ErrorMsg = INIT_LOG4J_ERROR;
			CALL writeToLogFile(MessageFlowLabel, 'ErrorLogger', 'ERROR',INIT_LOG4J_ERROR) INTO rc;		
		 END IF;
		 IF Environment.Variables.Counter IS NULL THEN 
		 	CALL writeToLogFile(MessageFlowLabel, 'ErrorLogger', 'ERROR','Environment.Variables.Counter is null maybe didnt capture tcp exceptionMsg') INTO rc;
			RETURN FALSE; 
		 END IF;
		 CALL CopyEntireMessage();
		 IF Environment.Variables.Retry.Counter IS NULL THEN 
				SET Environment.Variables.Retry.Counter = 1; 
		 END IF;
		 IF Environment.Variables.Retry.Counter <= MAX_RETRY_COUNT THEN
			CALL writeToLogFile(MessageFlowLabel, 'ErrorLogger', 'ERROR','retry count for connection:'||CAST(Environment.Variables.Retry.Counter AS CHARACTER)) INTO rc;
			DECLARE envRef REFERENCE TO Environment.Variables.Retry;
			IF envRef.Counter = 1 THEN 
				SET envRef.Counter = envRef.Counter + 1;
			ELSE
				SET envRef.Counter = envRef.Counter + 1;
				CALL retryWithDelay(envRef.Counter);
				CALL writeToLogFile(MessageFlowLabel, 'ErrorLogger', 'ERROR','retry the request after 10 sec delay for current count:'||CAST(envRef.Counter AS CHARACTER)||'is Complete') INTO rc;
			END IF;
			IF Environment.Variables.Retry.Counter > MAX_RETRY_COUNT THEN
				SET OutputRoot.DFDL = InputRoot.DFDL;
				SET OutputRoot.DFDL.ISO8583_1987.MTI_MessageFunction = '1';
				DECLARE outRef REFERENCE TO OutputRoot.DFDL.ISO8583_1987.PrimaryAccountNumber_002;
				X : WHILE LASTMOVE(outRef) DO
					DECLARE CurrentFieldName CHAR FIELDNAME(outRef);
						IF CAST(SUBSTRING(CurrentFieldName AFTER '_')AS INT) > 40 THEN
							CREATE PREVIOUSSIBLING OF outRef NAME 'ResponseCode_039';
							SET OutputRoot.DFDL.ISO8583_1987.ResponseCode_039 = '06';
							SET OutputRoot.DFDL.ISO8583_1987.PrimaryBitmap.Bit039 = '1';
							PROPAGATE TO TERMINAL 'out1';
							RETURN FALSE;
							LEAVE X;
						END IF;
					MOVE outRef NEXTSIBLING;
				END WHILE;				 
			ELSE	
				RETURN TRUE;
			END IF;
		 ELSE
		 	RETURN FALSE;
		 END IF;
		
	END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	CREATE PROCEDURE retryWithDelay(IN count INTEGER) BEGIN
		IF count <= MAX_RETRY_COUNT AND count > 1 THEN
			DECLARE varDelay BOOLEAN SLEEP(RETRY_INTERVAL);
		END IF;
	END;
END MODULE;
